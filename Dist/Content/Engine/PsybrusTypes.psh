#ifndef __PSYBRUSTYPES_PSH__
#define __PSYBRUSTYPES_PSH__


#include <PsybrusVersion.psh>

//////////////////////////////////////////////////////////////////////////
// Setup HLSL types
#if PSY_INPUT_BACKEND_TYPE == PSY_BACKEND_TYPE_GLSL || PSY_INPUT_BACKEND_TYPE == PSY_BACKEND_TYPE_GLSL_ES
#define float2 vec2
#define float3 vec3
#define float4 vec4
#define int2 ivec2
#define int3 ivec3
#define int4 ivec4
#define float3x3 mat3
#define float4x4 mat4

#define lerp mix
#define fmod mod
#endif

#if PSY_INPUT_BACKEND_TYPE == PSY_BACKEND_TYPE_GLSL_ES
#define uint int
#endif


//////////////////////////////////////////////////////////////////////////
// Matrix casting
#if PSY_INPUT_BACKEND_TYPE == PSY_BACKEND_TYPE_D3D11
float3x3 getFloat3x3( float4x4 Matrix )
{
	return (float3x3)Matrix;
}

float3x3 getFloat3x3( float3 Row0, float3 Row1, float3 Row2 )
{
	return transpose( float3x3( Row0, Row1, Row2 ) );
}

#elif PSY_INPUT_BACKEND_TYPE == PSY_BACKEND_TYPE_GLSL || PSY_INPUT_BACKEND_TYPE == PSY_BACKEND_TYPE_GLSL_ES
float3x3 getFloat3x3( float4x4 Matrix )
{
	return float3x3( Matrix );
}

float3x3 getFloat3x3( float3 Row0, float3 Row1, float3 Row2 )
{
	return float3x3( Row0, Row1, Row2 );
}

#endif

//////////////////////////////////////////////////////////////////////////
// PI
#define PI (3.14159265358979310)
#define PIMUL2 (6.28318530717958620)
#define PIMUL4 (12.5663706143591720)
#define PIDIV2 (1.57079632679489660)
#define PIDIV4 (0.78539816339744828)

#endif // __PSYBRUSTYPES_PSH__
